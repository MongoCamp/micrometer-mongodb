import{_ as n,o as a,c as i,a as t,b as o,r as d}from"./app.72efe976.js";const b=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Dependency Setup","slug":"dependency-setup","link":"#dependency-setup","children":[]},{"level":2,"title":"Binder","slug":"binder","link":"#binder","children":[]},{"level":2,"title":"Registry","slug":"registry","link":"#registry","children":[]}],"relativePath":"documentation/getting-started.md","lastUpdated":1743325747000}'),s={name:"documentation/getting-started.md"};function c(p,e,l,m,h,u){const r=d("DependencyGroup");return a(),i("div",null,[e[0]||(e[0]=t('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><p>A library to monitor your MongoDB and push all your <a href="https://micrometer.io/" target="_blank" rel="noreferrer">Micrometer</a> Stats to an Mongodb.</p><h2 id="dependency-setup" tabindex="-1">Dependency Setup <a class="header-anchor" href="#dependency-setup" aria-hidden="true">#</a></h2><p>Support Scala 2.12 and Scala 2.13.</p>',4)),o(r),e[1]||(e[1]=t('<h2 id="binder" tabindex="-1">Binder <a class="header-anchor" href="#binder" aria-hidden="true">#</a></h2><p>Micrometer Core supports some <a href="https://github.com/micrometer-metrics/micrometer/tree/main/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/mongodb" target="_blank" rel="noreferrer">build in Binder</a> for MongoDb Monitoring. But when you want more statistics over other MongoDb Statistics you need individual bindings. Some Binders you can find in our <a href="./binder/">binding collection</a>.</p><h2 id="registry" tabindex="-1">Registry <a class="header-anchor" href="#registry" aria-hidden="true">#</a></h2><p>Possibility to persist your Micrometer Stats to your MongoDB.</p><p><a href="https://github.com/MongoCamp/micrometer-mongodb/blob/master/LICENSE" target="_blank" rel="noreferrer">Apache 2</a></p>',5))])}const y=n(s,[["render",c]]);export{b as __pageData,y as default};
